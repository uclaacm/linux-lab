import _ from 'lodash';
import { useEffect, useState } from 'react';
import tuxPointing from '../../assets/images/tux-pointing.svg';
import { Directory, File } from '../shared/globalTypes';
import Modal from '../shared/Modal';
import Task from './../shared/Task';
import './../../styles/searching.scss';
import '../../styles/global.scss';

function Searching(): JSX.Element {
  const taskPrompts = [
    "Tux's friend Ruby lost her glasses.txt. Can you find where she left them?",
    `Ruby was so impressed by your work that she recommended you to Bob. Bob was packing for a trip and couldn't find where he placed his “camera”. Can you find what box (i.e., file) he placed a “camera” in?
`,
  ];

  const initFileSystem = new Directory(
    '/',
    undefined,
    new Map([
      [
        'dir1',
        new Directory(
          'dir1',
          undefined,
          new Map([
            ['.dir1-1', new Directory('.dir1-1', undefined)],
            ['.file1', new File('.file1', undefined)],
          ])
        ),
      ],
      ['file1.txt', new File('file1.txt', 'file1 contents')],
    ]),
    '/',
    true
  );

  const [fileSystem, setFileSystem] = useState<Directory>(initFileSystem);
  const [currentWorkingDirectory, setCurrentWorkingDirectory] =
    useState<Directory>(initFileSystem);

  // This is to test changing the file system! (You can see the change after 3s)
  useEffect(() => {
    setTimeout(() => {
      let copyFileSystem = _.cloneDeep(fileSystem) as Directory;
      copyFileSystem = copyFileSystem
        .addFileSystemObject(new File('file2.txt', 'file2 contents'))
        .removeFileSystemObject('file1.txt');

      const workingDirectoryCopy = copyFileSystem.getFileSystemObjectFromPath(
        currentWorkingDirectory.path
      ) as Directory;

      const directory = copyFileSystem.changeCurrentWorkingDirectory(
        workingDirectoryCopy,
        '/dir1/.dir1-1'
      ) as Directory;

      setCurrentWorkingDirectory(directory);
      setFileSystem(copyFileSystem);
    }, 3000);
  }, []);

  return (
    <>
      <div className="container">
        <h2 className="lesson-title">Searching</h2>
        <p className="body">
          Manually looking through all the file names in a directory or all the
          text in a file to find a specific string often takes forever. But
          Linux provides two commands that simplify this process:{' '}
          <span className="try-out-command">find</span> and{' '}
          <span className="try-out-command">grep</span>
        </p>
        <div id="lesson-content">
          <div>
            <span className="try-out-command">find</span>
            <p>
              recursively travels down the file hierarchy tree and, based on
              user-specified options, finds specific files or directories.
            </p>
            <div className='icicle-info-left'>
              <svg
                width="381" 
                height="131" 
                viewBox="0 0 381 131" 
                fill="none" 
                xmlns="http://www.w3.org/2000/svg">
                <path d="M9.85219 18.5554C14.125 14.5363 19.9416 11.7357 26.4132 10.5819L48.8176 6.58721C54.5424 5.56647 60.5181 5.88136 66.0218 7.49381L81.3621 11.9881C87.5173 13.7914 94.2442 13.9669 100.536 12.4882L121.762 7.49961C128.048 6.02212 134.822 7.91048 138.555 12.1812C142.184 16.3334 148.702 18.2459 154.87 16.9681L185.125 10.7002C190.881 9.50788 196.952 9.68076 202.584 11.1974L236.128 20.2298C238.671 20.9144 241.317 21.3289 243.997 21.4623L283.568 23.4331C288.243 23.666 292.923 23.0389 297.242 21.601L329.827 10.7518C333.552 9.51123 337.553 8.87225 341.595 8.87225H344.523C353.16 8.87225 361.39 11.7858 367.151 16.8837L370.862 20.1674V20.1674C375.945 24.6656 376.86 31.8963 376.689 38.6819L376.056 63.7894C376.019 65.2456 375.492 66.5462 374.141 67.0911C370.699 68.4799 364.354 70.0841 371.887 66.0605C371.956 66.0232 372.041 66 372.121 66V66C372.62 66 372.863 66.7823 372.506 67.1314C368.584 70.9632 368.019 78.7745 371.492 65.919C371.719 65.0781 372.776 64.7761 373.392 65.392V65.392C373.457 65.4572 373.479 65.5488 373.444 65.634C373.117 66.4279 371.613 70.2199 370.961 73.9322C370.616 75.8925 371.334 75.7526 371.264 73.7635L370.943 64.6151C370.884 64.1882 370.67 63.7838 370.328 63.4504L359.215 52.6157C357.922 51.3548 355.735 50.9184 353.842 51.5432C352.42 52.0124 351.386 53.0111 351.083 54.2073L338.765 102.888C338.56 103.698 337.088 103.677 336.921 102.861L332.019 78.9526C331.159 74.7604 323.523 74.8141 322.758 79.0178C322.694 79.3665 322.11 79.4554 321.888 79.1502L306.616 58.1811C304.017 54.6131 297.298 55.2139 295.769 59.1508C295.614 59.5493 295.527 59.9624 295.509 60.3791L293.993 96.0728C293.97 96.6196 292.996 96.7164 292.803 96.191L283.825 71.7519C281.78 66.1848 277.266 61.39 271.113 58.2499L266.846 56.0727C265.708 55.4921 264.205 55.664 263.32 56.4757C259.963 59.5582 257.779 63.3324 257.023 67.3592L249.398 107.974C249.383 108.055 249.315 108.123 249.219 108.153C247.408 108.727 245.413 107.751 245.251 106.211L241.082 66.6982C241.043 66.325 240.867 65.9691 240.575 65.6743L230.284 55.27C222.241 47.1375 205.932 49.7476 202.505 59.7159L202.152 60.7425C202.072 60.9764 201.741 61.0935 201.468 60.9851C198.65 59.8689 195.257 61.1456 194.569 63.5811L176.059 129.12C175.362 131.587 170.947 131.641 170.154 129.192L163.297 108.028C161.246 101.698 156.031 96.3006 148.853 93.0784L138.262 88.3246C137.65 88.05 137.194 87.6006 136.988 87.0683L127.266 62.0404C125.497 57.487 118.219 56.0946 114.022 59.5063L108.902 63.6674C107.451 64.8464 104.957 64.4947 104.109 62.9915L104.051 62.8893C103.338 61.6256 101.362 61.1732 99.9081 61.941C98.6578 62.6012 96.9737 62.3699 96.0771 61.4148L84.0183 48.569C82.6753 47.1384 79.8092 47.8177 79.6788 49.5975L79.2504 55.4497C78.825 61.2593 70.3271 61.3378 69.7945 55.537V55.537C69.1334 48.3358 59.2224 44.1391 51.2956 47.7039C47.3173 49.493 44.9048 52.8713 45.0184 56.4939V56.4939C45.1174 59.6499 40.5312 60.1522 39.9447 57.0496L38.2398 48.0302C37.8071 45.741 35.9292 43.7851 33.2599 42.8432C27.5056 40.8128 21.0482 44.2377 21.2264 49.2255L21.5501 58.2843C21.5978 59.6219 19.3153 60.0732 18.564 58.8747L0.316991 29.7707C-0.220886 28.9128 -0.0649467 27.8839 0.713993 27.1512L9.85219 18.5554Z" fill="#98C4E7"/>
                <path d="M10.8522 12.5554C15.1251 8.53626 20.9417 5.73575 27.4132 4.58188L49.8176 0.587207C55.5425 -0.433533 61.5181 -0.118639 67.0218 1.49381L82.3622 5.98813C88.5173 7.79142 95.2443 7.96688 101.536 6.48821L122.762 1.49961C129.048 0.0221224 135.822 1.91048 139.555 6.18116C143.184 10.3334 149.702 12.2459 155.87 10.9681L186.125 4.70023C191.881 3.50788 197.952 3.68076 203.584 5.19741L237.128 14.2298C239.671 14.9144 242.317 15.3289 244.997 15.4623L284.568 17.4331C289.244 17.666 293.924 17.0389 298.242 15.601L330.827 4.75175C334.553 3.51123 338.553 2.87225 342.595 2.87225H345.523C354.16 2.87225 362.39 5.78577 368.151 10.8837L371.862 14.1674V14.1674C376.965 18.6833 378.132 25.8659 378.488 32.6711L379.905 59.6949C379.968 60.8886 380.183 62.0857 380.248 63.2792C380.461 67.138 379.699 76.825 371.359 89.5046C370.697 90.5109 369.248 90.5605 368.496 89.6199V89.6199C368.18 89.2248 368.046 88.6978 368.123 88.1977C370.975 69.6458 370.093 74.7555 369.5 74.4612C362.514 70.9951 368.422 62.6428 364.285 68.2902L364.118 68.517C363.411 69.4824 361.564 69.2023 361.356 68.0982L358.706 53.9753C357.913 49.7482 351.759 47.6789 347.369 50.1629C345.4 51.2771 342.857 51.5356 340.596 50.8512L325.612 46.3152C322.15 45.2674 318.476 44.7301 314.77 44.7301H312.238C299.819 44.7301 288.652 50.719 284.04 59.8521L276.663 74.4612C276.29 75.1989 274.961 75.1723 274.636 74.4208L271.497 67.166C269.565 62.7005 261.802 62.277 259.115 66.4905C258.918 66.8009 258.404 66.8807 258.072 66.6524L254.586 64.2492C250.257 61.2658 243.813 61.2695 239.49 64.258L239.287 64.3985C238.946 64.6341 238.433 64.6203 238.113 64.3669C234.065 61.1602 227.265 61.9218 224.498 65.8919L222.977 68.0746C222.552 68.6846 221.439 68.67 221.039 68.0491L201.952 38.3827C201.94 38.3644 201.93 38.3453 201.924 38.3256C200.874 35.3479 195.56 35.3148 194.452 38.2791L176.739 85.6678C176.372 86.6485 174.597 86.5979 174.321 85.5989L171.73 76.2424C169.394 67.8079 154.136 67.9786 152.102 76.462C151.921 77.2199 150.619 77.3475 150.209 76.6474L138.177 56.0657C134.019 48.9544 123.239 45.9986 114.421 49.5523C113.73 49.831 112.889 49.7147 112.358 49.267L99.897 38.7664C95.4485 35.0178 88.0069 34.8336 83.2716 38.3549L80.8216 40.1767C78.5261 41.8837 75.0961 42.2105 72.355 40.9832L70.6089 40.2015C68.2893 39.1629 65.3503 39.7287 63.8911 41.4946L62.7267 42.9038C61.7937 44.0328 59.8639 44.3228 58.4738 43.5428C56.4829 42.4258 53.73 43.5534 53.73 45.486V46.9502C53.73 49.3486 50.4713 50.8607 47.8302 49.6877L20.276 37.4505C18.394 36.6146 16.6737 35.5684 15.1684 34.344L2.3506 23.9189C1.26125 23.0329 1.19752 21.637 2.20325 20.691L10.8522 12.5554Z" fill="#D1E6F7"/>
              </svg>
            </div>
          </div>
          <div>
            <span className="try-out-command">grep</span>
            <p>
              (short for “global/regular expression/print”) command searches for
              a specific string pattern in a file.
            </p>
            <div className='icicle-info-right'>
             <svg 
            //icicle
              width="381" 
              height="131" 
              viewBox="0 0 381 131" 
              fill="none" 
              xmlns="http://www.w3.org/2000/svg">
              <path d="M9.85219 18.5554C14.125 14.5363 19.9416 11.7357 26.4132 10.5819L48.8176 6.58721C54.5424 5.56647 60.5181 5.88136 66.0218 7.49381L81.3621 11.9881C87.5173 13.7914 94.2442 13.9669 100.536 12.4882L121.762 7.49961C128.048 6.02212 134.822 7.91048 138.555 12.1812C142.184 16.3334 148.702 18.2459 154.87 16.9681L185.125 10.7002C190.881 9.50788 196.952 9.68076 202.584 11.1974L236.128 20.2298C238.671 20.9144 241.317 21.3289 243.997 21.4623L283.568 23.4331C288.243 23.666 292.923 23.0389 297.242 21.601L329.827 10.7518C333.552 9.51123 337.553 8.87225 341.595 8.87225H344.523C353.16 8.87225 361.39 11.7858 367.151 16.8837L370.862 20.1674V20.1674C375.945 24.6656 376.86 31.8963 376.689 38.6819L376.056 63.7894C376.019 65.2456 375.492 66.5462 374.141 67.0911C370.699 68.4799 364.354 70.0841 371.887 66.0605C371.956 66.0232 372.041 66 372.121 66V66C372.62 66 372.863 66.7823 372.506 67.1314C368.584 70.9632 368.019 78.7745 371.492 65.919C371.719 65.0781 372.776 64.7761 373.392 65.392V65.392C373.457 65.4572 373.479 65.5488 373.444 65.634C373.117 66.4279 371.613 70.2199 370.961 73.9322C370.616 75.8925 371.334 75.7526 371.264 73.7635L370.943 64.6151C370.884 64.1882 370.67 63.7838 370.328 63.4504L359.215 52.6157C357.922 51.3548 355.735 50.9184 353.842 51.5432C352.42 52.0124 351.386 53.0111 351.083 54.2073L338.765 102.888C338.56 103.698 337.088 103.677 336.921 102.861L332.019 78.9526C331.159 74.7604 323.523 74.8141 322.758 79.0178C322.694 79.3665 322.11 79.4554 321.888 79.1502L306.616 58.1811C304.017 54.6131 297.298 55.2139 295.769 59.1508C295.614 59.5493 295.527 59.9624 295.509 60.3791L293.993 96.0728C293.97 96.6196 292.996 96.7164 292.803 96.191L283.825 71.7519C281.78 66.1848 277.266 61.39 271.113 58.2499L266.846 56.0727C265.708 55.4921 264.205 55.664 263.32 56.4757C259.963 59.5582 257.779 63.3324 257.023 67.3592L249.398 107.974C249.383 108.055 249.315 108.123 249.219 108.153C247.408 108.727 245.413 107.751 245.251 106.211L241.082 66.6982C241.043 66.325 240.867 65.9691 240.575 65.6743L230.284 55.27C222.241 47.1375 205.932 49.7476 202.505 59.7159L202.152 60.7425C202.072 60.9764 201.741 61.0935 201.468 60.9851C198.65 59.8689 195.257 61.1456 194.569 63.5811L176.059 129.12C175.362 131.587 170.947 131.641 170.154 129.192L163.297 108.028C161.246 101.698 156.031 96.3006 148.853 93.0784L138.262 88.3246C137.65 88.05 137.194 87.6006 136.988 87.0683L127.266 62.0404C125.497 57.487 118.219 56.0946 114.022 59.5063L108.902 63.6674C107.451 64.8464 104.957 64.4947 104.109 62.9915L104.051 62.8893C103.338 61.6256 101.362 61.1732 99.9081 61.941C98.6578 62.6012 96.9737 62.3699 96.0771 61.4148L84.0183 48.569C82.6753 47.1384 79.8092 47.8177 79.6788 49.5975L79.2504 55.4497C78.825 61.2593 70.3271 61.3378 69.7945 55.537V55.537C69.1334 48.3358 59.2224 44.1391 51.2956 47.7039C47.3173 49.493 44.9048 52.8713 45.0184 56.4939V56.4939C45.1174 59.6499 40.5312 60.1522 39.9447 57.0496L38.2398 48.0302C37.8071 45.741 35.9292 43.7851 33.2599 42.8432C27.5056 40.8128 21.0482 44.2377 21.2264 49.2255L21.5501 58.2843C21.5978 59.6219 19.3153 60.0732 18.564 58.8747L0.316991 29.7707C-0.220886 28.9128 -0.0649467 27.8839 0.713993 27.1512L9.85219 18.5554Z" fill="#98C4E7"/>
              <path d="M10.8522 12.5554C15.1251 8.53626 20.9417 5.73575 27.4132 4.58188L49.8176 0.587207C55.5425 -0.433533 61.5181 -0.118639 67.0218 1.49381L82.3622 5.98813C88.5173 7.79142 95.2443 7.96688 101.536 6.48821L122.762 1.49961C129.048 0.0221224 135.822 1.91048 139.555 6.18116C143.184 10.3334 149.702 12.2459 155.87 10.9681L186.125 4.70023C191.881 3.50788 197.952 3.68076 203.584 5.19741L237.128 14.2298C239.671 14.9144 242.317 15.3289 244.997 15.4623L284.568 17.4331C289.244 17.666 293.924 17.0389 298.242 15.601L330.827 4.75175C334.553 3.51123 338.553 2.87225 342.595 2.87225H345.523C354.16 2.87225 362.39 5.78577 368.151 10.8837L371.862 14.1674V14.1674C376.965 18.6833 378.132 25.8659 378.488 32.6711L379.905 59.6949C379.968 60.8886 380.183 62.0857 380.248 63.2792C380.461 67.138 379.699 76.825 371.359 89.5046C370.697 90.5109 369.248 90.5605 368.496 89.6199V89.6199C368.18 89.2248 368.046 88.6978 368.123 88.1977C370.975 69.6458 370.093 74.7555 369.5 74.4612C362.514 70.9951 368.422 62.6428 364.285 68.2902L364.118 68.517C363.411 69.4824 361.564 69.2023 361.356 68.0982L358.706 53.9753C357.913 49.7482 351.759 47.6789 347.369 50.1629C345.4 51.2771 342.857 51.5356 340.596 50.8512L325.612 46.3152C322.15 45.2674 318.476 44.7301 314.77 44.7301H312.238C299.819 44.7301 288.652 50.719 284.04 59.8521L276.663 74.4612C276.29 75.1989 274.961 75.1723 274.636 74.4208L271.497 67.166C269.565 62.7005 261.802 62.277 259.115 66.4905C258.918 66.8009 258.404 66.8807 258.072 66.6524L254.586 64.2492C250.257 61.2658 243.813 61.2695 239.49 64.258L239.287 64.3985C238.946 64.6341 238.433 64.6203 238.113 64.3669C234.065 61.1602 227.265 61.9218 224.498 65.8919L222.977 68.0746C222.552 68.6846 221.439 68.67 221.039 68.0491L201.952 38.3827C201.94 38.3644 201.93 38.3453 201.924 38.3256C200.874 35.3479 195.56 35.3148 194.452 38.2791L176.739 85.6678C176.372 86.6485 174.597 86.5979 174.321 85.5989L171.73 76.2424C169.394 67.8079 154.136 67.9786 152.102 76.462C151.921 77.2199 150.619 77.3475 150.209 76.6474L138.177 56.0657C134.019 48.9544 123.239 45.9986 114.421 49.5523C113.73 49.831 112.889 49.7147 112.358 49.267L99.897 38.7664C95.4485 35.0178 88.0069 34.8336 83.2716 38.3549L80.8216 40.1767C78.5261 41.8837 75.0961 42.2105 72.355 40.9832L70.6089 40.2015C68.2893 39.1629 65.3503 39.7287 63.8911 41.4946L62.7267 42.9038C61.7937 44.0328 59.8639 44.3228 58.4738 43.5428C56.4829 42.4258 53.73 43.5534 53.73 45.486V46.9502C53.73 49.3486 50.4713 50.8607 47.8302 49.6877L20.276 37.4505C18.394 36.6146 16.6737 35.5684 15.1684 34.344L2.3506 23.9189C1.26125 23.0329 1.19752 21.637 2.20325 20.691L10.8522 12.5554Z" fill="#D1E6F7"/>
             </svg>
            </div>
          </div>
        </div>

        <h2 className="heading-1">Commands in Action</h2>
        <div id="task-description">
          <div>
            <p className="body">
              Let&#39;s see these commands in action! Click on the Helpful
              Commands button for hints.
            </p>
          </div>
          <div id="task-hint">
            <Modal />
            <img
              src={tuxPointing}
              alt="tux pointing to the 'helpful commands' button"
              id="penguin"
            />
          </div>
        </div>
        <div id="tasks-container">
          <Task
            taskPrompt={taskPrompts[0]}
            taskName="Task 1"
            completed={true}
            fileSystem={fileSystem}
          />
          <Task
            taskPrompt={taskPrompts[1]}
            taskName="Task 2"
            completed={false}
          />
        </div>
      </div>
    </>
  );
}

export default Searching;
